import { createUIError } from './ui-error-builder'

const { thrower, matcher } = createUIError('NEXT_FORBIDDEN')

// TODO(@panteliselef): Update docs
/**
 * This function allows you to render the [forbidden.js file]
 * within a route segment as well as inject a tag.
 *
 * `forbidden()` can be used in
 * [Server Components](https://nextjs.org/docs/app/building-your-application/rendering/server-components),
 * [Route Handlers](https://nextjs.org/docs/app/building-your-application/routing/route-handlers), and
 * [Server Actions](https://nextjs.org/docs/app/building-your-application/data-fetching/server-actions-and-mutations).
 *
 * - In a Server Component, this will insert a `<meta name="robots" content="noindex" />` meta tag and set the status code to 403.
 * - In a Route Handler or Server Action, it will serve a 403 to the caller.
 *
 * // TODO(@panteliselef): Update docs
 * Read more: [Next.js Docs: `forbidden`](https://nextjs.org/docs/app/api-reference/functions/not-found)
 */
const forbidden = thrower

// TODO(@panteliselef): Update docs
/**
 * Checks an error to determine if it's an error generated by the `forbidden()`
 * helper.
 *
 * @param error the error that may reference a forbidden error
 * @returns true if the error is a forbidden error
 */
const isForbiddenError = matcher

export { forbidden, isForbiddenError }
